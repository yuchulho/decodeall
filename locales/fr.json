{
  "title": "Décodeur Auto Base64, CBOR, Hex, Encodage URL - Outil de Conversion Gratuit",
  "meta": {
    "description": "Outil en ligne gratuit qui détecte et convertit automatiquement 12 formats d'encodage : Base64, CBOR, Hex, encodage URL, entités HTML, UTF-8, ASCII, Base32 et plus.",
    "keywords": "décodeur Base64, décodeur CBOR, décodeur Hex, encodage URL, entités HTML, UTF-8, ASCII, Base32, convertisseur d'encodage, décodeur de texte"
  },
  "tabs": {
    "decoder": "Décodeur",
    "encoder": "Encodeur"
  },
  "decoder": {
    "inputLabel": "Entrez le texte à décoder",
    "inputPlaceholder": "Saisie directe | Glisser-déposer | Utilisez le bouton de chargement de fichier pour saisir du texte...",
    "outputLabel": "Résultat du décodage",
    "encodingTypeLabel": "Encodage détecté",
    "beautifyLabel": "Embellir",
    "hexViewLabel": "Vue HEX",
    "imageViewLabel": "Vue d'image",
    "description": "Le décodeur automatique détecte la méthode d'encodage du texte saisi et le restaure au texte original.",
    "copyTooltip": "Copier le résultat du décodage",
    "downloadTooltip": "Enregistrer le résultat du décodage dans un fichier",
    "binaryOutputLabel": "Sortie de données binaires",
    "imageSaveTooltip": "Enregistrer l'image dans un fichier"
  },
  "encoder": {
    "inputLabel": "Entrez le texte à encoder",
    "inputPlaceholder": "Saisie directe | Glisser-déposer | Utilisez le bouton de chargement de fichier pour saisir du texte...",
    "resultLabel": "Résultat de l'encodage",
    "algorithmDescription": "Description de l'algorithme",
    "description": "Vous pouvez sélectionner divers algorithmes pour encoder le texte dans le format souhaité.",
    "textInputLabel": "Saisie de texte brut",
    "copyTooltip": "Copier le résultat de l'encodage",
    "downloadTooltip": "Enregistrer le résultat de l'encodage dans un fichier"
  },
  "buttons": {
    "copy": "Copier",
    "download": "Enregistrer le fichier",
    "paste": "Coller",
    "clear": "Effacer",
    "fileLoad": "Charger le fichier",
    "inputClear": "Effacer la saisie",
    "hexCopy": "Copier Hex",
    "imageSave": "Enregistrer le fichier"
  },
  "messages": {
    "copySuccess": "Copié dans le presse-papiers.",
    "copyError": "Échec de la copie.",
    "binaryNotCopyable": "Les données binaires ne peuvent pas être copiées.",
    "downloadSuccess": "Fichier enregistré avec succès.",
    "downloadError": "Échec de l'enregistrement du fichier.",
    "pasteSuccess": "Collage terminé",
    "pasteError": "Échec du collage.",
    "clearSuccess": "Contenu effacé.",
    "imageSaveSuccess": "Image enregistrée avec succès.",
    "cannotDecode": "Impossible de décoder les données.",
    "noData": "Aucune donnée à décoder."
  },
  "common": {
    "privacyNote": "La saisie est traitée uniquement dans le navigateur et n'est pas stockée.",
    "supportedEncodings": "Encodages pris en charge",
    "cborDecoded": "Résultat du décodage CBOR",
    "cborDiagnosticNotation": "Notation de diagnostic CBOR",
    "language": "Langue",
    "theme": "Thème",
    "lightTheme": "Mode Clair",
    "darkTheme": "Mode Sombre",
    "systemTheme": "Paramètre Système",
    "korean": "한국어",
    "english": "English",
    "japanese": "日本語",
    "chinese_simplified": "简体中文",
    "chinese_traditional": "繁體中文",
    "spanish": "Español",
    "french": "Français",
    "german": "Deutsch",
    "russian": "Русский",
    "portuguese": "Português",
    "italian": "Italiano",
    "dragMessage": "Déposez les fichiers ici pour saisir le contenu",
    "binaryDataDescription": "Données binaires (y compris les caractères de contrôle non visibles).",
    "selectEncoding": "Sélectionner la méthode d'encodage"
  },
  "codecDescriptions": {
    "CBOR": "CBOR (Représentation d'Objet Binaire Concise) est un format de sérialisation de données binaires défini dans RFC 8949. Il est plus efficace que JSON et prend en charge divers types de données (entiers, nombres à virgule flottante, tableaux d'octets, dates, etc.). Utilisé comme alternative à JSON dans l'IoT, les API web, le stockage de données, etc.",
    "Hex (Base16)": "L'encodage Hex (hexadécimal/Base16) représente chaque octet (8 bits) par deux caractères hexadécimaux (0-9, A-F). Utilisé pour transmettre ou stocker en toute sécurité des données binaires sous forme de texte, couramment vu dans les codes couleur (#FF0000), adresses MAC, valeurs de hachage cryptographiques, etc. Exemple : 'A' → 41, 'ABC' → 414243",
    "Base64": "Base64 encode les données binaires 8 bits en utilisant 64 caractères ASCII sûrs (A-Z, a-z, 0-9, +, /). Largement utilisé dans les pièces jointes d'e-mail, les URL de données web (data:image/png;base64,...), JSON Web Token, communications API, etc. Convertit 3 octets en 4 caractères, augmentant la taille d'environ 33%.",
    "Base64URL": "Base64URL est une variante URL-safe de Base64, remplaçant les caractères qui causent des problèmes dans les URL et noms de fichiers. Remplace '+' par '-', '/' par '_' et supprime le padding ('='). Utilisé pour transmettre en toute sécurité des données binaires dans JWT (JSON Web Token), tokens OAuth, paramètres URL.",
    "URL Encoding": "L'encodage URL (encodage de pourcentage) convertit les caractères qui ont une signification spéciale ou sont dangereux dans les URL au format %XX. Les espaces deviennent %20, le texte français est converti en UTF-8 et chaque octet est représenté comme %XX. Essentiel pour la transmission de données de formulaires web, chaînes de requête, API REST. Exemple : 'bonjour' → %62%6F%6E%6A%6F%75%72",
    "HTML Entities": "Les entités HTML sont utilisées pour représenter en toute sécurité les caractères qui ont une signification spéciale en HTML. Encodées comme &lt;(<), &gt;(>), &amp;(&), &quot;(\"), &#numéro; format. Utilisées pour la prévention des attaques XSS en développement web, affichage de caractères spéciaux dans les documents XML/HTML, modèles HTML d'e-mail.",
    "Unicode Escape (\\uXXXX)": "L'échappement Unicode représente les caractères Unicode au format \\uXXXX avec hexadécimal à 4 chiffres. Utilisé pour représenter en toute sécurité les caractères non-ASCII dans les langages de programmation comme JavaScript, JSON, Java, C#. Exemple : 'é' → \\u00E9, '☃' → \\u2603. Souvent rencontré dans les fichiers d'internationalisation (i18n) ou l'analyse de journaux.",
    "UTF-8": "UTF-8 encode les caractères Unicode avec une longueur variable de 1-4 octets. Entièrement compatible avec ASCII (les caractères ASCII font 1 octet), peut représenter toutes les langues du monde, en faisant l'encodage standard du web. Le français est généralement encodé en 1-2 octets. Exemple : 'A' → 0x41 (1 octet), 'é' → 0xC3 0xA9 (2 octets)",
    "Quoted-Printable": "Quoted-Printable est une méthode d'encodage conçue pour la transmission d'e-mails, représentant les caractères non-ASCII au format =XX. Maintient la lisibilité du texte ASCII tout en encodant en toute sécurité les caractères spéciaux. Principalement utilisé dans l'encodage MIME d'e-mail et les en-têtes HTTP. Exemple : '=' → =3D, caractères français → =C3=A9",
    "JWT": "JWT (JSON Web Token) est un format de token compact et URL-safe pour transmettre en toute sécurité des informations entre les parties. Composé de trois parties séparées par des points : Header.Payload.Signature. Utilisé pour l'authentification, l'autorisation et l'échange d'informations dans les applications web et API.",
    "Plain Text": "Le texte brut affiche l'entrée telle quelle sans décodage. Utilisé lorsque l'entrée ne correspond à aucun format d'encodage spécifique ou lorsque vous voulez voir le texte original directement."
  }
}